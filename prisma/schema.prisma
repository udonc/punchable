// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/// ユーザー
model User {
  id                 String          @id @default(cuid()) /// ID
  createdAt          DateTime        @default(now()) /// 作成日時
  updatedAt          DateTime        @updatedAt /// 更新日時
  isArchived         Boolean         @default(false) /// アーカイブされたかどうか
  name               String /// Human-readable なユーザーの名前 (フルネーム, または名字のみなど、任意)
  slug               String          @unique /// URL に使われるユーザーの名前
  IpAddress          IpAddress[] /// ユーザーが使用する IP アドレス
  Attenddance        Attenddance[] /// ユーザーの出勤情報
  ReviewAsReviewer   Review[]        @relation(name: "reviewer") /// このユーザーがレビュアーとして関連付けられたレビュー
  ReviewAsReviewee   Review[]        @relation(name: "reviewee") /// このユーザーがレビュイーとして関連付けられたレビュー
  UserOrderAttribute UserAttribute[]
}

/// ユーザーの属性 ((キー, 値) のペア)
model UserAttribute {
  key    String /// キー
  value  String /// 値 (JSON 文字列)
  User   User   @relation(fields: [userId], references: [id]) /// この属性を持つユーザー
  userId String /// この属性を持つユーザーの ID

  @@id([key, userId]) /// 複合キー (key, userId)
}

/// IP アドレス
model IpAddress {
  id        String   @id @default(cuid()) /// ID
  createdAt DateTime @default(now()) /// 作成日時
  updatedAt DateTime @updatedAt /// 更新日時
  address   String   @unique /// IP アドレス
  User      User?    @relation(fields: [userId], references: [id]) /// この IP アドレスを使用しているユーザー
  userId    String? /// この IP アドレスを使用しているユーザーの ID
}

/// レポート
model Report {
  id        String   @id @default(cuid()) /// ID
  createdAt DateTime @default(now()) /// 作成日時
  updatedAt DateTime @updatedAt /// 更新日時
  isDraft   Boolean  @default(false) /// 下書きかどうか
  task      String /// 作業内容 (Markdown)
  progress  String /// 進捗 (Markdown)
}

/// 中期目標
model MidTermGoal {
  id        String   @id @default(cuid()) /// ID
  createdAt DateTime @default(now()) /// 作成日時
  updatedAt DateTime @updatedAt /// 更新日時
  body      String /// 本文 (Plain text)
}

model Review {
  id         String @id @default(cuid()) /// ID
  reviewer   User   @relation(name: "reviewer", fields: [reviewerId], references: [id]) /// レビュアー
  reviewerId String /// レビュアーの ID
  reviewee   User   @relation(name: "reviewee", fields: [revieweeId], references: [id]) /// レビュイー
  revieweeId String /// レビュイーの ID
}

/// 出勤情報
model Attenddance {
  id        String   @id @default(cuid()) /// ID
  createdAt DateTime @default(now()) /// 作成日時
  updatedAt DateTime @updatedAt /// 更新日時
  date      DateTime /// 日付
  type      String /// 種類 (出勤: "attend", 欠席: "absent", その他: "other")
  note      String? /// メモ
  User      User     @relation(fields: [userId], references: [id]) /// このタイムカードに紐づくユーザー
  userId    String /// このタイムカードに紐づくユーザーの ID
}
